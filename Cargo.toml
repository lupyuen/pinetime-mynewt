# Info about this package.
[package]
name          = "pinetime-mynewt"
version       = "2.0.0"
authors       = ["Lee Lup Yuen <luppy@appkaki.com>"]
edition       = "2018"
description   = "Mynewt Bindings for PineTime Smart Watch"
repository    = "https://github.com/lupyuen/pinetime-mynewt"
documentation = "https://docs.rs/pinetime-mynewt"
categories    = ["embedded", "no-std"]
keywords      = ["pinetime", "mynewt"]
readme        = "./README.md"
license       = "Apache-2.0"

# External Rust libraries used by this module.  See crates.io.
[dependencies]
pinetime-macros = "2.0.0"  # Safe Wrapper Macros for Mynewt on PineTime Smart Watch: https://crates.io/crates/pinetime-macros
# pinetime-macros = { path = "../pinetime-macros" }  # For development only
cortex-m        = { version = "0.6.1", features = [ "inline-asm" ] }  # Arm Cortex-M utilities: https://crates.io/crates/cortex-m
cstr_core       = "0.1.2"  # String utilities from cstr_core library: https://crates.io/crates/cstr_core
cty             = "0.2.0"  # String utilities from cty library: https://crates.io/crates/cty
embedded-hal    = "0.2.3"  # Embedded HAL Framework
heapless        = "0.5.1"  # `static` Vectors and Strings that don't require dynamic memory
memchr          = { version = "2", default-features = false } # String search. Reduce the ROM size by disabling default features. See https://github.com/BurntSushi/rust-memchr

# Build this module as a Rust library, not a Rust application.  We will link this library with the Mynewt executable.
[lib]
name       = "mynewt"  # Output will be named `libmynewt.rlib`
test       = false
bench      = false

# Optional features
[features]
default =  [      # Select the conditional compiled features
    "dispatch",   # Uncomment to support dispatching of OS functions to OS firmware
    # "use_float" # Uncomment to support floating-point e.g. GPS geolocation
]
use_float = []    # Define the feature
dispatch  = []